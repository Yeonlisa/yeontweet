{"version":3,"sources":["fbInstance.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fae868c.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUGKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\nimport { authService } from \"fbInstance\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    \n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n        setEmail(value);\n        } else if (name === \"password\") {\n        setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n\n            if (newAccount) {\n            data = await authService.createUserWithEmailAndPassword(\n                email,\n                password\n            );\n            } else {\n            data = await authService.signInWithEmailAndPassword(email, password);\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n            <input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                required\n                value={email}\n                onChange={onChange}\n                className=\"authInput\"\n            />\n            <input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                required\n                value={password}\n                className=\"authInput\"\n                onChange={onChange}\n            />\n            <input\n                type=\"submit\"\n                className=\"authInput authSubmit\"\n                value={newAccount ? \"Create Account\" : \"Login\"}\n            />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Login\" : \"Create Account\"}\n            </span>\n        </>\n    );\n}\n\nexport default AuthForm\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbInstance\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n\n        let provider;\n        \n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04aaff\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;","import React, { useState } from 'react';\nimport { dbService, storageService } from \"fbInstance\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n        if (ok) {\n            await dbService.doc(`tweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`tweets/${nweetObj.id}`).update({\n            text: newNweet,\n        });\n        setEditing(false);\n    };\n    \n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewNweet(value);\n    };\n\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n            <>\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Edit your tweet\"\n                    value={newNweet}\n                    required\n                    autoFocus\n                    onChange={onChange}\n                    className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\n                </form>\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                    Cancel\n                </span>\n            </>\n            ) : (\n            <>\n                <h4>{nweetObj.text}</h4>\n                {nweetObj.attachmentUrl && \n                    <img src={nweetObj.attachmentUrl} />\n                }\n                {isOwner && (\n                    <div className=\"nweet__actions\">\n                    <span onClick={onDeleteClick}>\n                        <FontAwesomeIcon icon={faTrash} />\n                    </span>\n                    <span onClick={toggleEditing}>\n                        <FontAwesomeIcon icon={faPencilAlt} />\n                    </span>\n                    </div>\n                )}\n            </>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbInstance\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n\n        event.preventDefault();\n        let attachmentUrl = \"\";\n\n        if (attachment !== \"\") {\n        const attachmentRef = storageService\n            .ref()\n            .child(`${userObj.uid}/${uuidv4()}`);\n        const response = await attachmentRef.putString(attachment, \"data_url\");\n        attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n        text: nweet,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        attachmentUrl,\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        const {\n        target: { value },\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {\n        target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n        const {\n            currentTarget: { result },\n        } = finishedEvent;\n        setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n\n    const onClearAttachment = () => setAttachment(\"\");\n    \n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"Write your mind!\"\n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"Send\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input \n                id=\"attach-file\"\n                type=\"file\" \n                accept=\"image/*\" \n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }} \n            />\n            {attachment && (\n            <div className=\"factoryForm__attachment\">\n                <img\n                src={attachment}\n                style={{\n                    backgroundImage: attachment,\n                }}\n                />\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                    <span>Remove</span>\n                    <FontAwesomeIcon icon={faTimes} />\n                </div>\n            </div>\n            )}\n        </form>\n    );\n};\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"fbInstance\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        });\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import React, { useState } from \"react\";\nimport { authService } from \"fbInstance\";\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    }\n    \n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Display name\"\n                    value={newDisplayName}\n                    className=\"formInput\"\n                />\n                <input \n                    type=\"submit\" \n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Logout\n            </span>\n        </div>\n    );\n};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04aaff\"} size=\"2x\" />\n                </Link>\n            </li>\n            <li>\n                <Link \n                    to=\"/profile\"\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                >\n                    <FontAwesomeIcon icon={faUser} color={\"#04aaff\"} size=\"2x\" />\n                    <span style={{ marginTop: 10 }}>\n                        {userObj.displayName\n                            ? `${userObj.displayName}의 Profile`\n                            :   \"Profile\"}\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                    </div> \n                ) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                    </>\n                )}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbInstance';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  \n  return (\n    <>\n      {init ? (\n        <AppRouter \n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)} \n          userObj={userObj} \n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} YeonTweet</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}